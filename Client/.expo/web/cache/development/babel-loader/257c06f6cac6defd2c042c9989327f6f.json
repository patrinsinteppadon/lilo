{"ast":null,"code":"'use strict';\n\nvar ARIADOMPropertyConfig = require(\"./ARIADOMPropertyConfig\");\n\nvar BeforeInputEventPlugin = require(\"./BeforeInputEventPlugin\");\n\nvar ChangeEventPlugin = require(\"./ChangeEventPlugin\");\n\nvar DefaultEventPluginOrder = require(\"./DefaultEventPluginOrder\");\n\nvar EnterLeaveEventPlugin = require(\"./EnterLeaveEventPlugin\");\n\nvar HTMLDOMPropertyConfig = require(\"./HTMLDOMPropertyConfig\");\n\nvar ReactComponentBrowserEnvironment = require(\"./ReactComponentBrowserEnvironment\");\n\nvar ReactDOMComponent = require(\"./ReactDOMComponent\");\n\nvar ReactDOMComponentTree = require(\"./ReactDOMComponentTree\");\n\nvar ReactDOMEmptyComponent = require(\"./ReactDOMEmptyComponent\");\n\nvar ReactDOMTreeTraversal = require(\"./ReactDOMTreeTraversal\");\n\nvar ReactDOMTextComponent = require(\"./ReactDOMTextComponent\");\n\nvar ReactDefaultBatchingStrategy = require(\"./ReactDefaultBatchingStrategy\");\n\nvar ReactEventListener = require(\"./ReactEventListener\");\n\nvar ReactInjection = require(\"./ReactInjection\");\n\nvar ReactReconcileTransaction = require(\"./ReactReconcileTransaction\");\n\nvar SVGDOMPropertyConfig = require(\"./SVGDOMPropertyConfig\");\n\nvar SelectEventPlugin = require(\"./SelectEventPlugin\");\n\nvar SimpleEventPlugin = require(\"./SimpleEventPlugin\");\n\nvar alreadyInjected = false;\n\nfunction inject() {\n  if (alreadyInjected) {\n    return;\n  }\n\n  alreadyInjected = true;\n  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);\n  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);\n  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);\n  ReactInjection.EventPluginHub.injectEventPluginsByName({\n    SimpleEventPlugin: SimpleEventPlugin,\n    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n    ChangeEventPlugin: ChangeEventPlugin,\n    SelectEventPlugin: SelectEventPlugin,\n    BeforeInputEventPlugin: BeforeInputEventPlugin\n  });\n  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);\n  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {\n    return new ReactDOMEmptyComponent(instantiate);\n  });\n  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);\n  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n}\n\nmodule.exports = {\n  inject: inject\n};","map":{"version":3,"sources":["/Users/paola/Documents/Capstone/lilo/node_modules/react-native-web-webrtc/node_modules/react-dom/lib/ReactDefaultInjection.js"],"names":["ARIADOMPropertyConfig","require","BeforeInputEventPlugin","ChangeEventPlugin","DefaultEventPluginOrder","EnterLeaveEventPlugin","HTMLDOMPropertyConfig","ReactComponentBrowserEnvironment","ReactDOMComponent","ReactDOMComponentTree","ReactDOMEmptyComponent","ReactDOMTreeTraversal","ReactDOMTextComponent","ReactDefaultBatchingStrategy","ReactEventListener","ReactInjection","ReactReconcileTransaction","SVGDOMPropertyConfig","SelectEventPlugin","SimpleEventPlugin","alreadyInjected","inject","EventEmitter","injectReactEventListener","EventPluginHub","injectEventPluginOrder","EventPluginUtils","injectComponentTree","injectTreeTraversal","injectEventPluginsByName","HostComponent","injectGenericComponentClass","injectTextComponentClass","DOMProperty","injectDOMPropertyConfig","EmptyComponent","injectEmptyComponentFactory","instantiate","Updates","injectReconcileTransaction","injectBatchingStrategy","Component","injectEnvironment","module","exports"],"mappings":"AAQA;;AAEA,IAAIA,qBAAqB,GAAGC,OAAO,2BAAnC;;AACA,IAAIC,sBAAsB,GAAGD,OAAO,4BAApC;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,uBAA/B;;AACA,IAAIG,uBAAuB,GAAGH,OAAO,6BAArC;;AACA,IAAII,qBAAqB,GAAGJ,OAAO,2BAAnC;;AACA,IAAIK,qBAAqB,GAAGL,OAAO,2BAAnC;;AACA,IAAIM,gCAAgC,GAAGN,OAAO,sCAA9C;;AACA,IAAIO,iBAAiB,GAAGP,OAAO,uBAA/B;;AACA,IAAIQ,qBAAqB,GAAGR,OAAO,2BAAnC;;AACA,IAAIS,sBAAsB,GAAGT,OAAO,4BAApC;;AACA,IAAIU,qBAAqB,GAAGV,OAAO,2BAAnC;;AACA,IAAIW,qBAAqB,GAAGX,OAAO,2BAAnC;;AACA,IAAIY,4BAA4B,GAAGZ,OAAO,kCAA1C;;AACA,IAAIa,kBAAkB,GAAGb,OAAO,wBAAhC;;AACA,IAAIc,cAAc,GAAGd,OAAO,oBAA5B;;AACA,IAAIe,yBAAyB,GAAGf,OAAO,+BAAvC;;AACA,IAAIgB,oBAAoB,GAAGhB,OAAO,0BAAlC;;AACA,IAAIiB,iBAAiB,GAAGjB,OAAO,uBAA/B;;AACA,IAAIkB,iBAAiB,GAAGlB,OAAO,uBAA/B;;AAEA,IAAImB,eAAe,GAAG,KAAtB;;AAEA,SAASC,MAAT,GAAkB;AAChB,MAAID,eAAJ,EAAqB;AAInB;AACD;;AACDA,EAAAA,eAAe,GAAG,IAAlB;AAEAL,EAAAA,cAAc,CAACO,YAAf,CAA4BC,wBAA5B,CAAqDT,kBAArD;AAKAC,EAAAA,cAAc,CAACS,cAAf,CAA8BC,sBAA9B,CAAqDrB,uBAArD;AACAW,EAAAA,cAAc,CAACW,gBAAf,CAAgCC,mBAAhC,CAAoDlB,qBAApD;AACAM,EAAAA,cAAc,CAACW,gBAAf,CAAgCE,mBAAhC,CAAoDjB,qBAApD;AAMAI,EAAAA,cAAc,CAACS,cAAf,CAA8BK,wBAA9B,CAAuD;AACrDV,IAAAA,iBAAiB,EAAEA,iBADkC;AAErDd,IAAAA,qBAAqB,EAAEA,qBAF8B;AAGrDF,IAAAA,iBAAiB,EAAEA,iBAHkC;AAIrDe,IAAAA,iBAAiB,EAAEA,iBAJkC;AAKrDhB,IAAAA,sBAAsB,EAAEA;AAL6B,GAAvD;AAQAa,EAAAA,cAAc,CAACe,aAAf,CAA6BC,2BAA7B,CAAyDvB,iBAAzD;AAEAO,EAAAA,cAAc,CAACe,aAAf,CAA6BE,wBAA7B,CAAsDpB,qBAAtD;AAEAG,EAAAA,cAAc,CAACkB,WAAf,CAA2BC,uBAA3B,CAAmDlC,qBAAnD;AACAe,EAAAA,cAAc,CAACkB,WAAf,CAA2BC,uBAA3B,CAAmD5B,qBAAnD;AACAS,EAAAA,cAAc,CAACkB,WAAf,CAA2BC,uBAA3B,CAAmDjB,oBAAnD;AAEAF,EAAAA,cAAc,CAACoB,cAAf,CAA8BC,2BAA9B,CAA0D,UAAUC,WAAV,EAAuB;AAC/E,WAAO,IAAI3B,sBAAJ,CAA2B2B,WAA3B,CAAP;AACD,GAFD;AAIAtB,EAAAA,cAAc,CAACuB,OAAf,CAAuBC,0BAAvB,CAAkDvB,yBAAlD;AACAD,EAAAA,cAAc,CAACuB,OAAf,CAAuBE,sBAAvB,CAA8C3B,4BAA9C;AAEAE,EAAAA,cAAc,CAAC0B,SAAf,CAAyBC,iBAAzB,CAA2CnC,gCAA3C;AACD;;AAEDoC,MAAM,CAACC,OAAP,GAAiB;AACfvB,EAAAA,MAAM,EAAEA;AADO,CAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar ARIADOMPropertyConfig = require('./ARIADOMPropertyConfig');\nvar BeforeInputEventPlugin = require('./BeforeInputEventPlugin');\nvar ChangeEventPlugin = require('./ChangeEventPlugin');\nvar DefaultEventPluginOrder = require('./DefaultEventPluginOrder');\nvar EnterLeaveEventPlugin = require('./EnterLeaveEventPlugin');\nvar HTMLDOMPropertyConfig = require('./HTMLDOMPropertyConfig');\nvar ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');\nvar ReactDOMComponent = require('./ReactDOMComponent');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMEmptyComponent = require('./ReactDOMEmptyComponent');\nvar ReactDOMTreeTraversal = require('./ReactDOMTreeTraversal');\nvar ReactDOMTextComponent = require('./ReactDOMTextComponent');\nvar ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');\nvar ReactEventListener = require('./ReactEventListener');\nvar ReactInjection = require('./ReactInjection');\nvar ReactReconcileTransaction = require('./ReactReconcileTransaction');\nvar SVGDOMPropertyConfig = require('./SVGDOMPropertyConfig');\nvar SelectEventPlugin = require('./SelectEventPlugin');\nvar SimpleEventPlugin = require('./SimpleEventPlugin');\n\nvar alreadyInjected = false;\n\nfunction inject() {\n  if (alreadyInjected) {\n    // TODO: This is currently true because these injections are shared between\n    // the client and the server package. They should be built independently\n    // and not share any injection state. Then this problem will be solved.\n    return;\n  }\n  alreadyInjected = true;\n\n  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);\n\n  /**\n   * Inject modules for resolving DOM hierarchy and plugin ordering.\n   */\n  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);\n  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);\n\n  /**\n   * Some important event plugins included by default (without having to require\n   * them).\n   */\n  ReactInjection.EventPluginHub.injectEventPluginsByName({\n    SimpleEventPlugin: SimpleEventPlugin,\n    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n    ChangeEventPlugin: ChangeEventPlugin,\n    SelectEventPlugin: SelectEventPlugin,\n    BeforeInputEventPlugin: BeforeInputEventPlugin\n  });\n\n  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);\n\n  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);\n\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n\n  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {\n    return new ReactDOMEmptyComponent(instantiate);\n  });\n\n  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);\n  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n\n  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n}\n\nmodule.exports = {\n  inject: inject\n};"]},"metadata":{},"sourceType":"script"}