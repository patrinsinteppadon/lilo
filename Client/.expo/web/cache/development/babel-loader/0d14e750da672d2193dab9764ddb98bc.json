{"ast":null,"code":"'use strict';\n\nvar _prodInvariant = require(\"./reactProdInvariant\");\n\nvar React = require('react/lib/React');\n\nvar ReactDOMContainerInfo = require(\"./ReactDOMContainerInfo\");\n\nvar ReactDefaultBatchingStrategy = require(\"./ReactDefaultBatchingStrategy\");\n\nvar ReactInstrumentation = require(\"./ReactInstrumentation\");\n\nvar ReactMarkupChecksum = require(\"./ReactMarkupChecksum\");\n\nvar ReactReconciler = require(\"./ReactReconciler\");\n\nvar ReactServerBatchingStrategy = require(\"./ReactServerBatchingStrategy\");\n\nvar ReactServerRenderingTransaction = require(\"./ReactServerRenderingTransaction\");\n\nvar ReactUpdates = require(\"./ReactUpdates\");\n\nvar emptyObject = require('fbjs/lib/emptyObject');\n\nvar instantiateReactComponent = require(\"./instantiateReactComponent\");\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar pendingTransactions = 0;\n\nfunction renderToStringImpl(element, makeStaticMarkup) {\n  var transaction;\n\n  try {\n    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);\n    transaction = ReactServerRenderingTransaction.getPooled(makeStaticMarkup);\n    pendingTransactions++;\n    return transaction.perform(function () {\n      var componentInstance = instantiateReactComponent(element, true);\n      var markup = ReactReconciler.mountComponent(componentInstance, transaction, null, ReactDOMContainerInfo(), emptyObject, 0);\n\n      if (process.env.NODE_ENV !== 'production') {\n        ReactInstrumentation.debugTool.onUnmountComponent(componentInstance._debugID);\n      }\n\n      if (!makeStaticMarkup) {\n        markup = ReactMarkupChecksum.addChecksumToMarkup(markup);\n      }\n\n      return markup;\n    }, null);\n  } finally {\n    pendingTransactions--;\n    ReactServerRenderingTransaction.release(transaction);\n\n    if (!pendingTransactions) {\n      ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n    }\n  }\n}\n\nfunction renderToString(element) {\n  !React.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : _prodInvariant('46') : void 0;\n  return renderToStringImpl(element, false);\n}\n\nfunction renderToStaticMarkup(element) {\n  !React.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : _prodInvariant('47') : void 0;\n  return renderToStringImpl(element, true);\n}\n\nmodule.exports = {\n  renderToString: renderToString,\n  renderToStaticMarkup: renderToStaticMarkup\n};","map":{"version":3,"sources":["/Users/paola/Documents/Capstone/lilo/node_modules/react-native-web-webrtc/node_modules/react-dom/lib/ReactServerRendering.js"],"names":["_prodInvariant","require","React","ReactDOMContainerInfo","ReactDefaultBatchingStrategy","ReactInstrumentation","ReactMarkupChecksum","ReactReconciler","ReactServerBatchingStrategy","ReactServerRenderingTransaction","ReactUpdates","emptyObject","instantiateReactComponent","invariant","pendingTransactions","renderToStringImpl","element","makeStaticMarkup","transaction","injection","injectBatchingStrategy","getPooled","perform","componentInstance","markup","mountComponent","process","env","NODE_ENV","debugTool","onUnmountComponent","_debugID","addChecksumToMarkup","release","renderToString","isValidElement","renderToStaticMarkup","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar React = require('react/lib/React');\nvar ReactDOMContainerInfo = require('./ReactDOMContainerInfo');\nvar ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactMarkupChecksum = require('./ReactMarkupChecksum');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactServerBatchingStrategy = require('./ReactServerBatchingStrategy');\nvar ReactServerRenderingTransaction = require('./ReactServerRenderingTransaction');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar invariant = require('fbjs/lib/invariant');\n\nvar pendingTransactions = 0;\n\n/**\n * @param {ReactElement} element\n * @return {string} the HTML markup\n */\nfunction renderToStringImpl(element, makeStaticMarkup) {\n  var transaction;\n  try {\n    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);\n\n    transaction = ReactServerRenderingTransaction.getPooled(makeStaticMarkup);\n\n    pendingTransactions++;\n\n    return transaction.perform(function () {\n      var componentInstance = instantiateReactComponent(element, true);\n      var markup = ReactReconciler.mountComponent(componentInstance, transaction, null, ReactDOMContainerInfo(), emptyObject, 0 /* parentDebugID */\n      );\n      if (process.env.NODE_ENV !== 'production') {\n        ReactInstrumentation.debugTool.onUnmountComponent(componentInstance._debugID);\n      }\n      if (!makeStaticMarkup) {\n        markup = ReactMarkupChecksum.addChecksumToMarkup(markup);\n      }\n      return markup;\n    }, null);\n  } finally {\n    pendingTransactions--;\n    ReactServerRenderingTransaction.release(transaction);\n    // Revert to the DOM batching strategy since these two renderers\n    // currently share these stateful modules.\n    if (!pendingTransactions) {\n      ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n    }\n  }\n}\n\n/**\n * Render a ReactElement to its initial HTML. This should only be used on the\n * server.\n * See https://facebook.github.io/react/docs/top-level-api.html#reactdomserver.rendertostring\n */\nfunction renderToString(element) {\n  !React.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : _prodInvariant('46') : void 0;\n  return renderToStringImpl(element, false);\n}\n\n/**\n * Similar to renderToString, except this doesn't create extra DOM attributes\n * such as data-react-id that React uses internally.\n * See https://facebook.github.io/react/docs/top-level-api.html#reactdomserver.rendertostaticmarkup\n */\nfunction renderToStaticMarkup(element) {\n  !React.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : _prodInvariant('47') : void 0;\n  return renderToStringImpl(element, true);\n}\n\nmodule.exports = {\n  renderToString: renderToString,\n  renderToStaticMarkup: renderToStaticMarkup\n};"]},"metadata":{},"sourceType":"script"}