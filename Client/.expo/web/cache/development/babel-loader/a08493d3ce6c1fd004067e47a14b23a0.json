{"ast":null,"code":"var _react = require('react');\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _UIManager = require(\"../../apis/UIManager\");\n\nvar _UIManager2 = _interopRequireDefault(_UIManager);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar NativeMethodsMixin = {\n  blur: function blur() {\n    _UIManager2.default.blur(_reactDom2.default.findDOMNode(this));\n  },\n  focus: function focus() {\n    _UIManager2.default.focus(_reactDom2.default.findDOMNode(this));\n  },\n  measure: function measure(callback) {\n    _UIManager2.default.measure(_reactDom2.default.findDOMNode(this), mountSafeCallback(this, callback));\n  },\n  measureInWindow: function measureInWindow(callback) {\n    _UIManager2.default.measureInWindow(_reactDom2.default.findDOMNode(this), mountSafeCallback(this, callback));\n  },\n  measureLayout: function measureLayout(relativeToNativeNode, onSuccess, onFail) {\n    _UIManager2.default.measureLayout(_reactDom2.default.findDOMNode(this), relativeToNativeNode, mountSafeCallback(this, onFail), mountSafeCallback(this, onSuccess));\n  },\n  setNativeProps: function setNativeProps(nativeProps) {\n    _UIManager2.default.updateView(_reactDom2.default.findDOMNode(this), nativeProps, this);\n  }\n};\n\nvar mountSafeCallback = function mountSafeCallback(context, callback) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (!callback) {\n      return undefined;\n    }\n\n    return callback.apply(context, args);\n  };\n};\n\nmodule.exports = NativeMethodsMixin;","map":{"version":3,"sources":["/Users/paola/Documents/Capstone/lilo/node_modules/react-native-web-webrtc/node_modules/react-native-web/dist/modules/NativeMethodsMixin/index.js"],"names":["_react","require","_reactDom","_reactDom2","_interopRequireDefault","_UIManager","_UIManager2","obj","__esModule","default","NativeMethodsMixin","blur","findDOMNode","focus","measure","callback","mountSafeCallback","measureInWindow","measureLayout","relativeToNativeNode","onSuccess","onFail","setNativeProps","nativeProps","updateView","context","_len","arguments","length","args","Array","_key","undefined","apply","module","exports"],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\nvar _react=require('react');\nvar _reactDom=require('react-dom');var _reactDom2=_interopRequireDefault(_reactDom);\nvar _UIManager=require('../../apis/UIManager');var _UIManager2=_interopRequireDefault(_UIManager);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar NativeMethodsMixin={\n/**\n   * Removes focus from an input or view. This is the opposite of `focus()`.\n   */\nblur:function blur(){\n_UIManager2.default.blur(_reactDom2.default.findDOMNode(this));\n},\n\n/**\n   * Requests focus for the given input or view.\n   * The exact behavior triggered will depend the type of view.\n   */\nfocus:function focus(){\n_UIManager2.default.focus(_reactDom2.default.findDOMNode(this));\n},\n\n/**\n   * Determines the position and dimensions of the view\n   */\nmeasure:function measure(callback){\n_UIManager2.default.measure(\n_reactDom2.default.findDOMNode(this),\nmountSafeCallback(this,callback));\n\n},\n\n/**\n   * Determines the location of the given view in the window and returns the\n   * values via an async callback. If the React root view is embedded in\n   * another native view, this will give you the absolute coordinates. If\n   * successful, the callback will be called be called with the following\n   * arguments:\n   *\n   *  - x\n   *  - y\n   *  - width\n   *  - height\n   *\n   * Note that these measurements are not available until after the rendering\n   * has been completed in native.\n   */\nmeasureInWindow:function measureInWindow(callback){\n_UIManager2.default.measureInWindow(\n_reactDom2.default.findDOMNode(this),\nmountSafeCallback(this,callback));\n\n},\n\n/**\n   * Measures the view relative to another view (usually an ancestor)\n   */\nmeasureLayout:function measureLayout(\nrelativeToNativeNode,\nonSuccess,\nonFail/* currently unused */)\n{\n_UIManager2.default.measureLayout(\n_reactDom2.default.findDOMNode(this),\nrelativeToNativeNode,\nmountSafeCallback(this,onFail),\nmountSafeCallback(this,onSuccess));\n\n},\n\n/**\n   * This function sends props straight to the underlying DOM node.\n   */\nsetNativeProps:function setNativeProps(nativeProps){\n_UIManager2.default.updateView(\n_reactDom2.default.findDOMNode(this),\nnativeProps,\nthis);\n\n}};\n\n\n/**\n * In the future, we should cleanup callbacks by cancelling them instead of\n * using this.\n *//**\n * Copyright (c) 2015-present, Nicolas Gallagher.\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * \n */var mountSafeCallback=function mountSafeCallback(context,callback){return function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}if(!callback){return undefined;}return callback.apply(context,args);};};\n\nmodule.exports=NativeMethodsMixin;"]},"metadata":{},"sourceType":"script"}