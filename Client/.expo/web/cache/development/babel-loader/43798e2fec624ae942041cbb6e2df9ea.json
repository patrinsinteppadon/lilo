{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _Dimensions = require(\"../Dimensions\");\n\nvar _Dimensions2 = _interopRequireDefault(_Dimensions);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar PixelRatio = function () {\n  function PixelRatio() {\n    _classCallCheck(this, PixelRatio);\n  }\n\n  _createClass(PixelRatio, null, [{\n    key: 'get',\n    value: function get() {\n      return _Dimensions2.default.get('window').scale;\n    }\n  }, {\n    key: 'getFontScale',\n    value: function getFontScale() {\n      return _Dimensions2.default.get('window').fontScale || PixelRatio.get();\n    }\n  }, {\n    key: 'getPixelSizeForLayoutSize',\n    value: function getPixelSizeForLayoutSize(layoutSize) {\n      return Math.round(layoutSize * PixelRatio.get());\n    }\n  }, {\n    key: 'roundToNearestPixel',\n    value: function roundToNearestPixel(layoutSize) {\n      var ratio = PixelRatio.get();\n      return Math.round(layoutSize * ratio) / ratio;\n    }\n  }]);\n\n  return PixelRatio;\n}();\n\nmodule.exports = PixelRatio;","map":{"version":3,"sources":["/Users/paola/Documents/Capstone/lilo/node_modules/react-native-web-webrtc/node_modules/react-native-web/dist/apis/PixelRatio/index.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_Dimensions","require","_Dimensions2","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","TypeError","PixelRatio","value","get","scale","getFontScale","fontScale","getPixelSizeForLayoutSize","layoutSize","Math","round","roundToNearestPixel","ratio","module","exports"],"mappings":"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","sourcesContent":["var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();/**\n * Copyright (c) 2015-present, Nicolas Gallagher.\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * \n */\n\nvar _Dimensions=require('../Dimensions');var _Dimensions2=_interopRequireDefault(_Dimensions);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}\n\n/**\n * PixelRatio gives access to the device pixel density.\n */var\nPixelRatio=function(){function PixelRatio(){_classCallCheck(this,PixelRatio);}_createClass(PixelRatio,null,[{key:'get',\n/**\n   * Returns the device pixel density.\n   */value:function get()\n{\nreturn _Dimensions2.default.get('window').scale;\n}\n\n/**\n   * No equivalent for Web\n   */},{key:'getFontScale',value:function getFontScale()\n{\nreturn _Dimensions2.default.get('window').fontScale||PixelRatio.get();\n}\n\n/**\n   * Converts a layout size (dp) to pixel size (px).\n   * Guaranteed to return an integer number.\n   */},{key:'getPixelSizeForLayoutSize',value:function getPixelSizeForLayoutSize(\nlayoutSize){\nreturn Math.round(layoutSize*PixelRatio.get());\n}\n\n/**\n   * Rounds a layout size (dp) to the nearest layout size that corresponds to\n   * an integer number of pixels. For example, on a device with a PixelRatio\n   * of 3, `PixelRatio.roundToNearestPixel(8.4) = 8.33`, which corresponds to\n   * exactly (8.33 * 3) = 25 pixels.\n   */},{key:'roundToNearestPixel',value:function roundToNearestPixel(\nlayoutSize){\nvar ratio=PixelRatio.get();\nreturn Math.round(layoutSize*ratio)/ratio;\n}}]);return PixelRatio;}();\n\n\nmodule.exports=PixelRatio;"]},"metadata":{},"sourceType":"script"}