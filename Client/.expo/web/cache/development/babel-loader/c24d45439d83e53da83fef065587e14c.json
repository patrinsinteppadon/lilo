{"ast":null,"code":"'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar BoundingDimensions = require(\"./BoundingDimensions\");\n\nvar keyMirror = require('fbjs/lib/keyMirror');\n\nvar normalizeColor = require(\"../../modules/normalizeColor\");\n\nvar Position = require(\"./Position\");\n\nvar React = require('react');\n\nvar TouchEventUtils = require('fbjs/lib/TouchEventUtils');\n\nvar UIManager = require(\"../../apis/UIManager\");\n\nvar View = require(\"../../components/View\");\n\nvar States = keyMirror({\n  NOT_RESPONDER: null,\n  RESPONDER_INACTIVE_PRESS_IN: null,\n  RESPONDER_INACTIVE_PRESS_OUT: null,\n  RESPONDER_ACTIVE_PRESS_IN: null,\n  RESPONDER_ACTIVE_PRESS_OUT: null,\n  RESPONDER_ACTIVE_LONG_PRESS_IN: null,\n  RESPONDER_ACTIVE_LONG_PRESS_OUT: null,\n  ERROR: null\n});\nvar IsActive = {\n  RESPONDER_ACTIVE_PRESS_OUT: true,\n  RESPONDER_ACTIVE_PRESS_IN: true\n};\nvar IsPressingIn = {\n  RESPONDER_INACTIVE_PRESS_IN: true,\n  RESPONDER_ACTIVE_PRESS_IN: true,\n  RESPONDER_ACTIVE_LONG_PRESS_IN: true\n};\nvar IsLongPressingIn = {\n  RESPONDER_ACTIVE_LONG_PRESS_IN: true\n};\nvar Signals = keyMirror({\n  DELAY: null,\n  RESPONDER_GRANT: null,\n  RESPONDER_RELEASE: null,\n  RESPONDER_TERMINATED: null,\n  ENTER_PRESS_RECT: null,\n  LEAVE_PRESS_RECT: null,\n  LONG_PRESS_DETECTED: null\n});\nvar Transitions = {\n  NOT_RESPONDER: {\n    DELAY: States.ERROR,\n    RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,\n    RESPONDER_RELEASE: States.ERROR,\n    RESPONDER_TERMINATED: States.ERROR,\n    ENTER_PRESS_RECT: States.ERROR,\n    LEAVE_PRESS_RECT: States.ERROR,\n    LONG_PRESS_DETECTED: States.ERROR\n  },\n  RESPONDER_INACTIVE_PRESS_IN: {\n    DELAY: States.RESPONDER_ACTIVE_PRESS_IN,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.ERROR\n  },\n  RESPONDER_INACTIVE_PRESS_OUT: {\n    DELAY: States.RESPONDER_ACTIVE_PRESS_OUT,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.ERROR\n  },\n  RESPONDER_ACTIVE_PRESS_IN: {\n    DELAY: States.ERROR,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN\n  },\n  RESPONDER_ACTIVE_PRESS_OUT: {\n    DELAY: States.ERROR,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.ERROR\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_IN: {\n    DELAY: States.ERROR,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_OUT: {\n    DELAY: States.ERROR,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.ERROR\n  },\n  error: {\n    DELAY: States.NOT_RESPONDER,\n    RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.NOT_RESPONDER,\n    LEAVE_PRESS_RECT: States.NOT_RESPONDER,\n    LONG_PRESS_DETECTED: States.NOT_RESPONDER\n  }\n};\nvar HIGHLIGHT_DELAY_MS = 130;\nvar PRESS_EXPAND_PX = 20;\nvar LONG_PRESS_THRESHOLD = 500;\nvar LONG_PRESS_DELAY_MS = LONG_PRESS_THRESHOLD - HIGHLIGHT_DELAY_MS;\nvar LONG_PRESS_ALLOWED_MOVEMENT = 10;\nvar TouchableMixin = {\n  componentWillUnmount: function componentWillUnmount() {\n    this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);\n    this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);\n    this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);\n  },\n  touchableGetInitialState: function touchableGetInitialState() {\n    return {\n      touchable: {\n        touchState: undefined,\n        responderID: null\n      }\n    };\n  },\n  touchableHandleResponderTerminationRequest: function touchableHandleResponderTerminationRequest() {\n    return !this.props.rejectResponderTermination;\n  },\n  touchableHandleStartShouldSetResponder: function touchableHandleStartShouldSetResponder() {\n    return !this.props.disabled;\n  },\n  touchableLongPressCancelsPress: function touchableLongPressCancelsPress() {\n    return true;\n  },\n  touchableHandleResponderGrant: function touchableHandleResponderGrant(e) {\n    var dispatchID = e.currentTarget;\n    e.persist();\n    this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);\n    this.pressOutDelayTimeout = null;\n    this.state.touchable.touchState = States.NOT_RESPONDER;\n    this.state.touchable.responderID = dispatchID;\n\n    this._receiveSignal(Signals.RESPONDER_GRANT, e);\n\n    var delayMS = this.touchableGetHighlightDelayMS !== undefined ? Math.max(this.touchableGetHighlightDelayMS(), 0) : HIGHLIGHT_DELAY_MS;\n    delayMS = isNaN(delayMS) ? HIGHLIGHT_DELAY_MS : delayMS;\n\n    if (delayMS !== 0) {\n      this.touchableDelayTimeout = setTimeout(this._handleDelay.bind(this, e), delayMS);\n    } else {\n      this._handleDelay(e);\n    }\n\n    var longDelayMS = this.touchableGetLongPressDelayMS !== undefined ? Math.max(this.touchableGetLongPressDelayMS(), 10) : LONG_PRESS_DELAY_MS;\n    longDelayMS = isNaN(longDelayMS) ? LONG_PRESS_DELAY_MS : longDelayMS;\n    this.longPressDelayTimeout = setTimeout(this._handleLongDelay.bind(this, e), longDelayMS + delayMS);\n  },\n  touchableHandleResponderRelease: function touchableHandleResponderRelease(e) {\n    this._receiveSignal(Signals.RESPONDER_RELEASE, e);\n  },\n  touchableHandleResponderTerminate: function touchableHandleResponderTerminate(e) {\n    this._receiveSignal(Signals.RESPONDER_TERMINATED, e);\n  },\n  touchableHandleResponderMove: function touchableHandleResponderMove(e) {\n    if (this.state.touchable.touchState === States.RESPONDER_INACTIVE_PRESS_IN) {\n      return;\n    }\n\n    if (!this.state.touchable.positionOnActivate) {\n      return;\n    }\n\n    var positionOnActivate = this.state.touchable.positionOnActivate;\n    var dimensionsOnActivate = this.state.touchable.dimensionsOnActivate;\n    var pressRectOffset = this.touchableGetPressRectOffset ? this.touchableGetPressRectOffset() : {\n      left: PRESS_EXPAND_PX,\n      right: PRESS_EXPAND_PX,\n      top: PRESS_EXPAND_PX,\n      bottom: PRESS_EXPAND_PX\n    };\n    var pressExpandLeft = pressRectOffset.left;\n    var pressExpandTop = pressRectOffset.top;\n    var pressExpandRight = pressRectOffset.right;\n    var pressExpandBottom = pressRectOffset.bottom;\n    var hitSlop = this.touchableGetHitSlop ? this.touchableGetHitSlop() : null;\n\n    if (hitSlop) {\n      pressExpandLeft += hitSlop.left;\n      pressExpandTop += hitSlop.top;\n      pressExpandRight += hitSlop.right;\n      pressExpandBottom += hitSlop.bottom;\n    }\n\n    var touch = TouchEventUtils.extractSingleTouch(e.nativeEvent);\n    var pageX = touch && touch.pageX;\n    var pageY = touch && touch.pageY;\n\n    if (this.pressInLocation) {\n      var movedDistance = this._getDistanceBetweenPoints(pageX, pageY, this.pressInLocation.pageX, this.pressInLocation.pageY);\n\n      if (movedDistance > LONG_PRESS_ALLOWED_MOVEMENT) {\n        this._cancelLongPressDelayTimeout();\n      }\n    }\n\n    var isTouchWithinActive = pageX > positionOnActivate.left - pressExpandLeft && pageY > positionOnActivate.top - pressExpandTop && pageX < positionOnActivate.left + dimensionsOnActivate.width + pressExpandRight && pageY < positionOnActivate.top + dimensionsOnActivate.height + pressExpandBottom;\n\n    if (isTouchWithinActive) {\n      this._receiveSignal(Signals.ENTER_PRESS_RECT, e);\n\n      var curState = this.state.touchable.touchState;\n\n      if (curState === States.RESPONDER_INACTIVE_PRESS_IN) {\n        this._cancelLongPressDelayTimeout();\n      }\n    } else {\n      this._cancelLongPressDelayTimeout();\n\n      this._receiveSignal(Signals.LEAVE_PRESS_RECT, e);\n    }\n  },\n  _remeasureMetricsOnActivation: function _remeasureMetricsOnActivation(e) {\n    UIManager.measure(e.nativeEvent.target, this._handleQueryLayout);\n  },\n  _handleQueryLayout: function _handleQueryLayout(l, t, w, h, globalX, globalY) {\n    this.state.touchable.positionOnActivate && Position.release(this.state.touchable.positionOnActivate);\n    this.state.touchable.dimensionsOnActivate && BoundingDimensions.release(this.state.touchable.dimensionsOnActivate);\n    this.state.touchable.positionOnActivate = Position.getPooled(globalX, globalY);\n    this.state.touchable.dimensionsOnActivate = BoundingDimensions.getPooled(w, h);\n  },\n  _handleDelay: function _handleDelay(e) {\n    this.touchableDelayTimeout = null;\n\n    this._receiveSignal(Signals.DELAY, e);\n  },\n  _handleLongDelay: function _handleLongDelay(e) {\n    this.longPressDelayTimeout = null;\n    var curState = this.state.touchable.touchState;\n\n    if (curState !== States.RESPONDER_ACTIVE_PRESS_IN && curState !== States.RESPONDER_ACTIVE_LONG_PRESS_IN) {\n      console.error('Attempted to transition from state `' + curState + '` to `' + States.RESPONDER_ACTIVE_LONG_PRESS_IN + '`, which is not supported. This is ' + 'most likely due to `Touchable.longPressDelayTimeout` not being cancelled.');\n    } else {\n      this._receiveSignal(Signals.LONG_PRESS_DETECTED, e);\n    }\n  },\n  _receiveSignal: function _receiveSignal(signal, e) {\n    var responderID = this.state.touchable.responderID;\n    var curState = this.state.touchable.touchState;\n    var nextState = Transitions[curState] && Transitions[curState][signal];\n\n    if (!responderID && signal === Signals.RESPONDER_RELEASE) {\n      return;\n    }\n\n    if (!nextState) {\n      throw new Error('Unrecognized signal `' + signal + '` or state `' + curState + '` for Touchable responder `' + responderID + '`');\n    }\n\n    if (nextState === States.ERROR) {\n      throw new Error('Touchable cannot transition from `' + curState + '` to `' + signal + '` for responder `' + responderID + '`');\n    }\n\n    if (curState !== nextState) {\n      this._performSideEffectsForTransition(curState, nextState, signal, e);\n\n      this.state.touchable.touchState = nextState;\n    }\n  },\n  _cancelLongPressDelayTimeout: function _cancelLongPressDelayTimeout() {\n    this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);\n    this.longPressDelayTimeout = null;\n  },\n  _isHighlight: function _isHighlight(state) {\n    return state === States.RESPONDER_ACTIVE_PRESS_IN || state === States.RESPONDER_ACTIVE_LONG_PRESS_IN;\n  },\n  _savePressInLocation: function _savePressInLocation(e) {\n    var touch = TouchEventUtils.extractSingleTouch(e.nativeEvent);\n    var pageX = touch && touch.pageX;\n    var pageY = touch && touch.pageY;\n    var locationX = touch && touch.locationX;\n    var locationY = touch && touch.locationY;\n    this.pressInLocation = {\n      pageX: pageX,\n      pageY: pageY,\n      locationX: locationX,\n      locationY: locationY\n    };\n  },\n  _getDistanceBetweenPoints: function _getDistanceBetweenPoints(aX, aY, bX, bY) {\n    var deltaX = aX - bX;\n    var deltaY = aY - bY;\n    return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  },\n  _performSideEffectsForTransition: function _performSideEffectsForTransition(curState, nextState, signal, e) {\n    var _this = this;\n\n    var curIsHighlight = this._isHighlight(curState);\n\n    var newIsHighlight = this._isHighlight(nextState);\n\n    var isFinalSignal = signal === Signals.RESPONDER_TERMINATED || signal === Signals.RESPONDER_RELEASE;\n\n    if (isFinalSignal) {\n      this._cancelLongPressDelayTimeout();\n    }\n\n    if (!IsActive[curState] && IsActive[nextState]) {\n      this._remeasureMetricsOnActivation(e);\n    }\n\n    if (IsPressingIn[curState] && signal === Signals.LONG_PRESS_DETECTED) {\n      this.touchableHandleLongPress && this.touchableHandleLongPress(e);\n    }\n\n    if (newIsHighlight && !curIsHighlight) {\n      this._savePressInLocation(e);\n\n      this.touchableHandleActivePressIn && this.touchableHandleActivePressIn(e);\n    } else if (!newIsHighlight && curIsHighlight && this.touchableHandleActivePressOut) {\n      if (this.touchableGetPressOutDelayMS && this.touchableGetPressOutDelayMS()) {\n        this.pressOutDelayTimeout = setTimeout(function () {\n          _this.touchableHandleActivePressOut(e);\n        }, this.touchableGetPressOutDelayMS());\n      } else {\n        this.touchableHandleActivePressOut(e);\n      }\n    }\n\n    if (IsPressingIn[curState] && signal === Signals.RESPONDER_RELEASE) {\n      var hasLongPressHandler = !!this.props.onLongPress;\n      var pressIsLongButStillCallOnPress = IsLongPressingIn[curState] && (!hasLongPressHandler || !this.touchableLongPressCancelsPress());\n      var shouldInvokePress = !IsLongPressingIn[curState] || pressIsLongButStillCallOnPress;\n\n      if (shouldInvokePress && this.touchableHandlePress) {\n        this.touchableHandlePress(e);\n      }\n    }\n\n    this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);\n    this.touchableDelayTimeout = null;\n  }\n};\nvar Touchable = {\n  Mixin: TouchableMixin,\n  TOUCH_TARGET_DEBUG: false,\n  renderDebugView: function renderDebugView(_ref) {\n    var color = _ref.color;\n    var hitSlop = _ref.hitSlop;\n\n    if (!Touchable.TOUCH_TARGET_DEBUG) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV === 'production') {\n      throw Error('Touchable.TOUCH_TARGET_DEBUG should not be enabled in prod!');\n    }\n\n    var debugHitSlopStyle = {};\n    hitSlop = hitSlop || {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    };\n\n    for (var key in hitSlop) {\n      debugHitSlopStyle[key] = -hitSlop[key];\n    }\n\n    var hexColor = '#' + ('00000000' + normalizeColor(color).toString(16)).substr(-8);\n    return React.createElement(View, {\n      pointerEvents: 'none',\n      style: _extends({\n        position: 'absolute',\n        borderColor: hexColor.slice(0, -2) + '55',\n        borderWidth: 1,\n        borderStyle: 'dashed',\n        backgroundColor: hexColor.slice(0, -2) + '0F'\n      }, debugHitSlopStyle)\n    });\n  }\n};\nmodule.exports = Touchable;","map":{"version":3,"sources":["/Users/paola/Documents/Capstone/lilo/node_modules/react-native-web-webrtc/node_modules/react-native-web/dist/components/Touchable/Touchable.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","BoundingDimensions","require","keyMirror","normalizeColor","Position","React","TouchEventUtils","UIManager","View","States","NOT_RESPONDER","RESPONDER_INACTIVE_PRESS_IN","RESPONDER_INACTIVE_PRESS_OUT","RESPONDER_ACTIVE_PRESS_IN","RESPONDER_ACTIVE_PRESS_OUT","RESPONDER_ACTIVE_LONG_PRESS_IN","RESPONDER_ACTIVE_LONG_PRESS_OUT","ERROR","IsActive","IsPressingIn","IsLongPressingIn","Signals","DELAY","RESPONDER_GRANT","RESPONDER_RELEASE","RESPONDER_TERMINATED","ENTER_PRESS_RECT","LEAVE_PRESS_RECT","LONG_PRESS_DETECTED","Transitions","error","HIGHLIGHT_DELAY_MS","PRESS_EXPAND_PX","LONG_PRESS_THRESHOLD","LONG_PRESS_DELAY_MS","LONG_PRESS_ALLOWED_MOVEMENT","TouchableMixin","componentWillUnmount","touchableDelayTimeout","clearTimeout","longPressDelayTimeout","pressOutDelayTimeout","touchableGetInitialState","touchable","touchState","undefined","responderID","touchableHandleResponderTerminationRequest","props","rejectResponderTermination","touchableHandleStartShouldSetResponder","disabled","touchableLongPressCancelsPress","touchableHandleResponderGrant","e","dispatchID","currentTarget","persist","state","_receiveSignal","delayMS","touchableGetHighlightDelayMS","Math","max","isNaN","setTimeout","_handleDelay","bind","longDelayMS","touchableGetLongPressDelayMS","_handleLongDelay","touchableHandleResponderRelease","touchableHandleResponderTerminate","touchableHandleResponderMove","positionOnActivate","dimensionsOnActivate","pressRectOffset","touchableGetPressRectOffset","left","right","top","bottom","pressExpandLeft","pressExpandTop","pressExpandRight","pressExpandBottom","hitSlop","touchableGetHitSlop","touch","extractSingleTouch","nativeEvent","pageX","pageY","pressInLocation","movedDistance","_getDistanceBetweenPoints","_cancelLongPressDelayTimeout","isTouchWithinActive","width","height","curState","_remeasureMetricsOnActivation","measure","_handleQueryLayout","l","t","w","h","globalX","globalY","release","getPooled","console","signal","nextState","Error","_performSideEffectsForTransition","_isHighlight","_savePressInLocation","locationX","locationY","aX","aY","bX","bY","deltaX","deltaY","sqrt","_this","curIsHighlight","newIsHighlight","isFinalSignal","touchableHandleLongPress","touchableHandleActivePressIn","touchableHandleActivePressOut","touchableGetPressOutDelayMS","hasLongPressHandler","onLongPress","pressIsLongButStillCallOnPress","shouldInvokePress","touchableHandlePress","Touchable","Mixin","TOUCH_TARGET_DEBUG","renderDebugView","_ref","color","process","env","NODE_ENV","debugHitSlopStyle","hexColor","toString","substr","createElement","pointerEvents","style","position","borderColor","slice","borderWidth","borderStyle","backgroundColor","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable */\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Touchable\n */\n\n'use strict';\n\n/* @edit start */var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};\nvar BoundingDimensions=require('./BoundingDimensions');\nvar keyMirror=require('fbjs/lib/keyMirror');\nvar normalizeColor=require('../../modules/normalizeColor');\nvar Position=require('./Position');\nvar React=require('react');\nvar TouchEventUtils=require('fbjs/lib/TouchEventUtils');\nvar UIManager=require('../../apis/UIManager');\nvar View=require('../../components/View');\n/* @edit end */\n\n/**\n * `Touchable`: Taps done right.\n *\n * You hook your `ResponderEventPlugin` events into `Touchable`. `Touchable`\n * will measure time/geometry and tells you when to give feedback to the user.\n *\n * ====================== Touchable Tutorial ===============================\n * The `Touchable` mixin helps you handle the \"press\" interaction. It analyzes\n * the geometry of elements, and observes when another responder (scroll view\n * etc) has stolen the touch lock. It notifies your component when it should\n * give feedback to the user. (bouncing/highlighting/unhighlighting).\n *\n * - When a touch was activated (typically you highlight)\n * - When a touch was deactivated (typically you unhighlight)\n * - When a touch was \"pressed\" - a touch ended while still within the geometry\n *   of the element, and no other element (like scroller) has \"stolen\" touch\n *   lock (\"responder\") (Typically you bounce the element).\n *\n * A good tap interaction isn't as simple as you might think. There should be a\n * slight delay before showing a highlight when starting a touch. If a\n * subsequent touch move exceeds the boundary of the element, it should\n * unhighlight, but if that same touch is brought back within the boundary, it\n * should rehighlight again. A touch can move in and out of that boundary\n * several times, each time toggling highlighting, but a \"press\" is only\n * triggered if that touch ends while within the element's boundary and no\n * scroller (or anything else) has stolen the lock on touches.\n *\n * To create a new type of component that handles interaction using the\n * `Touchable` mixin, do the following:\n *\n * - Initialize the `Touchable` state.\n *\n *   getInitialState: function() {\n *     return merge(this.touchableGetInitialState(), yourComponentState);\n *   }\n *\n * - Choose the rendered component who's touches should start the interactive\n *   sequence. On that rendered node, forward all `Touchable` responder\n *   handlers. You can choose any rendered node you like. Choose a node whose\n *   hit target you'd like to instigate the interaction sequence:\n *\n *   // In render function:\n *   return (\n *     <View\n *       onStartShouldSetResponder={this.touchableHandleStartShouldSetResponder}\n *       onResponderTerminationRequest={this.touchableHandleResponderTerminationRequest}\n *       onResponderGrant={this.touchableHandleResponderGrant}\n *       onResponderMove={this.touchableHandleResponderMove}\n *       onResponderRelease={this.touchableHandleResponderRelease}\n *       onResponderTerminate={this.touchableHandleResponderTerminate}>\n *       <View>\n *         Even though the hit detection/interactions are triggered by the\n *         wrapping (typically larger) node, we usually end up implementing\n *         custom logic that highlights this inner one.\n *       </View>\n *     </View>\n *   );\n *\n * - You may set up your own handlers for each of these events, so long as you\n *   also invoke the `touchable*` handlers inside of your custom handler.\n *\n * - Implement the handlers on your component class in order to provide\n *   feedback to the user. See documentation for each of these class methods\n *   that you should implement.\n *\n *   touchableHandlePress: function() {\n *      this.performBounceAnimation();  // or whatever you want to do.\n *   },\n *   touchableHandleActivePressIn: function() {\n *     this.beginHighlighting(...);  // Whatever you like to convey activation\n *   },\n *   touchableHandleActivePressOut: function() {\n *     this.endHighlighting(...);  // Whatever you like to convey deactivation\n *   },\n *\n * - There are more advanced methods you can implement (see documentation below):\n *   touchableGetHighlightDelayMS: function() {\n *     return 20;\n *   }\n *   // In practice, *always* use a predeclared constant (conserve memory).\n *   touchableGetPressRectOffset: function() {\n *     return {top: 20, left: 20, right: 20, bottom: 100};\n *   }\n */\n\n/**\n * Touchable states.\n */\nvar States=keyMirror({\nNOT_RESPONDER:null,// Not the responder\nRESPONDER_INACTIVE_PRESS_IN:null,// Responder, inactive, in the `PressRect`\nRESPONDER_INACTIVE_PRESS_OUT:null,// Responder, inactive, out of `PressRect`\nRESPONDER_ACTIVE_PRESS_IN:null,// Responder, active, in the `PressRect`\nRESPONDER_ACTIVE_PRESS_OUT:null,// Responder, active, out of `PressRect`\nRESPONDER_ACTIVE_LONG_PRESS_IN:null,// Responder, active, in the `PressRect`, after long press threshold\nRESPONDER_ACTIVE_LONG_PRESS_OUT:null,// Responder, active, out of `PressRect`, after long press threshold\nERROR:null});\n\n\n/**\n * Quick lookup map for states that are considered to be \"active\"\n */\nvar IsActive={\nRESPONDER_ACTIVE_PRESS_OUT:true,\nRESPONDER_ACTIVE_PRESS_IN:true};\n\n\n/**\n * Quick lookup for states that are considered to be \"pressing\" and are\n * therefore eligible to result in a \"selection\" if the press stops.\n */\nvar IsPressingIn={\nRESPONDER_INACTIVE_PRESS_IN:true,\nRESPONDER_ACTIVE_PRESS_IN:true,\nRESPONDER_ACTIVE_LONG_PRESS_IN:true};\n\n\nvar IsLongPressingIn={\nRESPONDER_ACTIVE_LONG_PRESS_IN:true};\n\n\n/**\n * Inputs to the state machine.\n */\nvar Signals=keyMirror({\nDELAY:null,\nRESPONDER_GRANT:null,\nRESPONDER_RELEASE:null,\nRESPONDER_TERMINATED:null,\nENTER_PRESS_RECT:null,\nLEAVE_PRESS_RECT:null,\nLONG_PRESS_DETECTED:null});\n\n\n/**\n * Mapping from States x Signals => States\n */\nvar Transitions={\nNOT_RESPONDER:{\nDELAY:States.ERROR,\nRESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN,\nRESPONDER_RELEASE:States.ERROR,\nRESPONDER_TERMINATED:States.ERROR,\nENTER_PRESS_RECT:States.ERROR,\nLEAVE_PRESS_RECT:States.ERROR,\nLONG_PRESS_DETECTED:States.ERROR},\n\nRESPONDER_INACTIVE_PRESS_IN:{\nDELAY:States.RESPONDER_ACTIVE_PRESS_IN,\nRESPONDER_GRANT:States.ERROR,\nRESPONDER_RELEASE:States.NOT_RESPONDER,\nRESPONDER_TERMINATED:States.NOT_RESPONDER,\nENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN,\nLEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT,\nLONG_PRESS_DETECTED:States.ERROR},\n\nRESPONDER_INACTIVE_PRESS_OUT:{\nDELAY:States.RESPONDER_ACTIVE_PRESS_OUT,\nRESPONDER_GRANT:States.ERROR,\nRESPONDER_RELEASE:States.NOT_RESPONDER,\nRESPONDER_TERMINATED:States.NOT_RESPONDER,\nENTER_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_IN,\nLEAVE_PRESS_RECT:States.RESPONDER_INACTIVE_PRESS_OUT,\nLONG_PRESS_DETECTED:States.ERROR},\n\nRESPONDER_ACTIVE_PRESS_IN:{\nDELAY:States.ERROR,\nRESPONDER_GRANT:States.ERROR,\nRESPONDER_RELEASE:States.NOT_RESPONDER,\nRESPONDER_TERMINATED:States.NOT_RESPONDER,\nENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN,\nLEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT,\nLONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN},\n\nRESPONDER_ACTIVE_PRESS_OUT:{\nDELAY:States.ERROR,\nRESPONDER_GRANT:States.ERROR,\nRESPONDER_RELEASE:States.NOT_RESPONDER,\nRESPONDER_TERMINATED:States.NOT_RESPONDER,\nENTER_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_IN,\nLEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_PRESS_OUT,\nLONG_PRESS_DETECTED:States.ERROR},\n\nRESPONDER_ACTIVE_LONG_PRESS_IN:{\nDELAY:States.ERROR,\nRESPONDER_GRANT:States.ERROR,\nRESPONDER_RELEASE:States.NOT_RESPONDER,\nRESPONDER_TERMINATED:States.NOT_RESPONDER,\nENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN,\nLEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT,\nLONG_PRESS_DETECTED:States.RESPONDER_ACTIVE_LONG_PRESS_IN},\n\nRESPONDER_ACTIVE_LONG_PRESS_OUT:{\nDELAY:States.ERROR,\nRESPONDER_GRANT:States.ERROR,\nRESPONDER_RELEASE:States.NOT_RESPONDER,\nRESPONDER_TERMINATED:States.NOT_RESPONDER,\nENTER_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_IN,\nLEAVE_PRESS_RECT:States.RESPONDER_ACTIVE_LONG_PRESS_OUT,\nLONG_PRESS_DETECTED:States.ERROR},\n\nerror:{\nDELAY:States.NOT_RESPONDER,\nRESPONDER_GRANT:States.RESPONDER_INACTIVE_PRESS_IN,\nRESPONDER_RELEASE:States.NOT_RESPONDER,\nRESPONDER_TERMINATED:States.NOT_RESPONDER,\nENTER_PRESS_RECT:States.NOT_RESPONDER,\nLEAVE_PRESS_RECT:States.NOT_RESPONDER,\nLONG_PRESS_DETECTED:States.NOT_RESPONDER}};\n\n\n\n// ==== Typical Constants for integrating into UI components ====\n// var HIT_EXPAND_PX = 20;\n// var HIT_VERT_OFFSET_PX = 10;\nvar HIGHLIGHT_DELAY_MS=130;\n\nvar PRESS_EXPAND_PX=20;\n\nvar LONG_PRESS_THRESHOLD=500;\n\nvar LONG_PRESS_DELAY_MS=LONG_PRESS_THRESHOLD-HIGHLIGHT_DELAY_MS;\n\nvar LONG_PRESS_ALLOWED_MOVEMENT=10;\n\n// Default amount \"active\" region protrudes beyond box\n\n/**\n * By convention, methods prefixed with underscores are meant to be @private,\n * and not @protected. Mixers shouldn't access them - not even to provide them\n * as callback handlers.\n *\n *\n * ========== Geometry =========\n * `Touchable` only assumes that there exists a `HitRect` node. The `PressRect`\n * is an abstract box that is extended beyond the `HitRect`.\n *\n *  +--------------------------+\n *  |                          | - \"Start\" events in `HitRect` cause `HitRect`\n *  |  +--------------------+  |   to become the responder.\n *  |  |  +--------------+  |  | - `HitRect` is typically expanded around\n *  |  |  |              |  |  |   the `VisualRect`, but shifted downward.\n *  |  |  |  VisualRect  |  |  | - After pressing down, after some delay,\n *  |  |  |              |  |  |   and before letting up, the Visual React\n *  |  |  +--------------+  |  |   will become \"active\". This makes it eligible\n *  |  |     HitRect        |  |   for being highlighted (so long as the\n *  |  +--------------------+  |   press remains in the `PressRect`).\n *  |        PressRect     o   |\n *  +----------------------|---+\n *           Out Region    |\n *                         +-----+ This gap between the `HitRect` and\n *                                 `PressRect` allows a touch to move far away\n *                                 from the original hit rect, and remain\n *                                 highlighted, and eligible for a \"Press\".\n *                                 Customize this via\n *                                 `touchableGetPressRectOffset()`.\n *\n *\n *\n * ======= State Machine =======\n *\n * +-------------+ <---+ RESPONDER_RELEASE\n * |NOT_RESPONDER|\n * +-------------+ <---+ RESPONDER_TERMINATED\n *     +\n *     | RESPONDER_GRANT (HitRect)\n *     v\n * +---------------------------+  DELAY   +-------------------------+  T + DELAY     +------------------------------+\n * |RESPONDER_INACTIVE_PRESS_IN|+-------->|RESPONDER_ACTIVE_PRESS_IN| +------------> |RESPONDER_ACTIVE_LONG_PRESS_IN|\n * +---------------------------+          +-------------------------+                +------------------------------+\n *     +            ^                         +           ^                                 +           ^\n *     |LEAVE_      |ENTER_                   |LEAVE_     |ENTER_                           |LEAVE_     |ENTER_\n *     |PRESS_RECT  |PRESS_RECT               |PRESS_RECT |PRESS_RECT                       |PRESS_RECT |PRESS_RECT\n *     |            |                         |           |                                 |           |\n *     v            +                         v           +                                 v           +\n * +----------------------------+  DELAY  +--------------------------+               +-------------------------------+\n * |RESPONDER_INACTIVE_PRESS_OUT|+------->|RESPONDER_ACTIVE_PRESS_OUT|               |RESPONDER_ACTIVE_LONG_PRESS_OUT|\n * +----------------------------+         +--------------------------+               +-------------------------------+\n *\n * T + DELAY => LONG_PRESS_DELAY_MS + DELAY\n *\n * Not drawn are the side effects of each transition. The most important side\n * effect is the `touchableHandlePress` abstract method invocation that occurs\n * when a responder is released while in either of the \"Press\" states.\n *\n * The other important side effects are the highlight abstract method\n * invocations (internal callbacks) to be implemented by the mixer.\n *\n *\n * @lends Touchable.prototype\n */\nvar TouchableMixin={\n/**\n   * Clear all timeouts on unmount\n   */\ncomponentWillUnmount:function componentWillUnmount(){\nthis.touchableDelayTimeout&&clearTimeout(this.touchableDelayTimeout);\nthis.longPressDelayTimeout&&clearTimeout(this.longPressDelayTimeout);\nthis.pressOutDelayTimeout&&clearTimeout(this.pressOutDelayTimeout);\n},\n\n/**\n   * It's prefer that mixins determine state in this way, having the class\n   * explicitly mix the state in the one and only `getInitialState` method.\n   *\n   * @return {object} State object to be placed inside of\n   * `this.state.touchable`.\n   */\ntouchableGetInitialState:function touchableGetInitialState(){\nreturn{\ntouchable:{touchState:undefined,responderID:null}};\n\n},\n\n// ==== Hooks to Gesture Responder system ====\n/**\n   * Must return true if embedded in a native platform scroll view.\n   */\ntouchableHandleResponderTerminationRequest:function touchableHandleResponderTerminationRequest(){\nreturn!this.props.rejectResponderTermination;\n},\n\n/**\n   * Must return true to start the process of `Touchable`.\n   */\ntouchableHandleStartShouldSetResponder:function touchableHandleStartShouldSetResponder(){\nreturn!this.props.disabled;\n},\n\n/**\n   * Return true to cancel press on long press.\n   */\ntouchableLongPressCancelsPress:function touchableLongPressCancelsPress(){\nreturn true;\n},\n\n/**\n   * Place as callback for a DOM element's `onResponderGrant` event.\n   * @param {SyntheticEvent} e Synthetic event from event system.\n   *\n   */\ntouchableHandleResponderGrant:function touchableHandleResponderGrant(e){\nvar dispatchID=e.currentTarget;\n// Since e is used in a callback invoked on another event loop\n// (as in setTimeout etc), we need to call e.persist() on the\n// event to make sure it doesn't get reused in the event object pool.\ne.persist();\n\nthis.pressOutDelayTimeout&&clearTimeout(this.pressOutDelayTimeout);\nthis.pressOutDelayTimeout=null;\n\nthis.state.touchable.touchState=States.NOT_RESPONDER;\nthis.state.touchable.responderID=dispatchID;\nthis._receiveSignal(Signals.RESPONDER_GRANT,e);\nvar delayMS=\nthis.touchableGetHighlightDelayMS!==undefined?\nMath.max(this.touchableGetHighlightDelayMS(),0):HIGHLIGHT_DELAY_MS;\ndelayMS=isNaN(delayMS)?HIGHLIGHT_DELAY_MS:delayMS;\nif(delayMS!==0){\nthis.touchableDelayTimeout=setTimeout(\nthis._handleDelay.bind(this,e),\ndelayMS);\n\n}else{\nthis._handleDelay(e);\n}\n\nvar longDelayMS=\nthis.touchableGetLongPressDelayMS!==undefined?\nMath.max(this.touchableGetLongPressDelayMS(),10):LONG_PRESS_DELAY_MS;\nlongDelayMS=isNaN(longDelayMS)?LONG_PRESS_DELAY_MS:longDelayMS;\nthis.longPressDelayTimeout=setTimeout(\nthis._handleLongDelay.bind(this,e),\nlongDelayMS+delayMS);\n\n},\n\n/**\n   * Place as callback for a DOM element's `onResponderRelease` event.\n   */\ntouchableHandleResponderRelease:function touchableHandleResponderRelease(e){\nthis._receiveSignal(Signals.RESPONDER_RELEASE,e);\n},\n\n/**\n   * Place as callback for a DOM element's `onResponderTerminate` event.\n   */\ntouchableHandleResponderTerminate:function touchableHandleResponderTerminate(e){\nthis._receiveSignal(Signals.RESPONDER_TERMINATED,e);\n},\n\n/**\n   * Place as callback for a DOM element's `onResponderMove` event.\n   */\ntouchableHandleResponderMove:function touchableHandleResponderMove(e){\n// Not enough time elapsed yet, wait for highlight -\n// this is just a perf optimization.\nif(this.state.touchable.touchState===States.RESPONDER_INACTIVE_PRESS_IN){\nreturn;\n}\n\n// Measurement may not have returned yet.\nif(!this.state.touchable.positionOnActivate){\nreturn;\n}\n\nvar positionOnActivate=this.state.touchable.positionOnActivate;\nvar dimensionsOnActivate=this.state.touchable.dimensionsOnActivate;\nvar pressRectOffset=this.touchableGetPressRectOffset?\nthis.touchableGetPressRectOffset():{\nleft:PRESS_EXPAND_PX,\nright:PRESS_EXPAND_PX,\ntop:PRESS_EXPAND_PX,\nbottom:PRESS_EXPAND_PX};\n\n\nvar pressExpandLeft=pressRectOffset.left;\nvar pressExpandTop=pressRectOffset.top;\nvar pressExpandRight=pressRectOffset.right;\nvar pressExpandBottom=pressRectOffset.bottom;\n\nvar hitSlop=this.touchableGetHitSlop?\nthis.touchableGetHitSlop():null;\n\nif(hitSlop){\npressExpandLeft+=hitSlop.left;\npressExpandTop+=hitSlop.top;\npressExpandRight+=hitSlop.right;\npressExpandBottom+=hitSlop.bottom;\n}\n\nvar touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);\nvar pageX=touch&&touch.pageX;\nvar pageY=touch&&touch.pageY;\n\nif(this.pressInLocation){\nvar movedDistance=this._getDistanceBetweenPoints(pageX,pageY,this.pressInLocation.pageX,this.pressInLocation.pageY);\nif(movedDistance>LONG_PRESS_ALLOWED_MOVEMENT){\nthis._cancelLongPressDelayTimeout();\n}\n}\n\nvar isTouchWithinActive=\npageX>positionOnActivate.left-pressExpandLeft&&\npageY>positionOnActivate.top-pressExpandTop&&\npageX<\npositionOnActivate.left+\ndimensionsOnActivate.width+\npressExpandRight&&\npageY<\npositionOnActivate.top+\ndimensionsOnActivate.height+\npressExpandBottom;\nif(isTouchWithinActive){\nthis._receiveSignal(Signals.ENTER_PRESS_RECT,e);\nvar curState=this.state.touchable.touchState;\nif(curState===States.RESPONDER_INACTIVE_PRESS_IN){\n// fix for t7967420\nthis._cancelLongPressDelayTimeout();\n}\n}else{\nthis._cancelLongPressDelayTimeout();\nthis._receiveSignal(Signals.LEAVE_PRESS_RECT,e);\n}\n},\n\n// ==== Abstract Application Callbacks ====\n\n/**\n   * Invoked when the item should be highlighted. Mixers should implement this\n   * to visually distinguish the `VisualRect` so that the user knows that\n   * releasing a touch will result in a \"selection\" (analog to click).\n   *\n   * @abstract\n   * touchableHandleActivePressIn: function,\n   */\n\n/**\n   * Invoked when the item is \"active\" (in that it is still eligible to become\n   * a \"select\") but the touch has left the `PressRect`. Usually the mixer will\n   * want to unhighlight the `VisualRect`. If the user (while pressing) moves\n   * back into the `PressRect` `touchableHandleActivePressIn` will be invoked\n   * again and the mixer should probably highlight the `VisualRect` again. This\n   * event will not fire on an `touchEnd/mouseUp` event, only move events while\n   * the user is depressing the mouse/touch.\n   *\n   * @abstract\n   * touchableHandleActivePressOut: function\n   */\n\n/**\n   * Invoked when the item is \"selected\" - meaning the interaction ended by\n   * letting up while the item was either in the state\n   * `RESPONDER_ACTIVE_PRESS_IN` or `RESPONDER_INACTIVE_PRESS_IN`.\n   *\n   * @abstract\n   * touchableHandlePress: function\n   */\n\n/**\n   * Invoked when the item is long pressed - meaning the interaction ended by\n   * letting up while the item was in `RESPONDER_ACTIVE_LONG_PRESS_IN`. If\n   * `touchableHandleLongPress` is *not* provided, `touchableHandlePress` will\n   * be called as it normally is. If `touchableHandleLongPress` is provided, by\n   * default any `touchableHandlePress` callback will not be invoked. To\n   * override this default behavior, override `touchableLongPressCancelsPress`\n   * to return false. As a result, `touchableHandlePress` will be called when\n   * lifting up, even if `touchableHandleLongPress` has also been called.\n   *\n   * @abstract\n   * touchableHandleLongPress: function\n   */\n\n/**\n   * Returns the number of millis to wait before triggering a highlight.\n   *\n   * @abstract\n   * touchableGetHighlightDelayMS: function\n   */\n\n/**\n   * Returns the amount to extend the `HitRect` into the `PressRect`. Positive\n   * numbers mean the size expands outwards.\n   *\n   * @abstract\n   * touchableGetPressRectOffset: function\n   */\n\n\n\n// ==== Internal Logic ====\n\n/**\n   * Measures the `HitRect` node on activation. The Bounding rectangle is with\n   * respect to viewport - not page, so adding the `pageXOffset/pageYOffset`\n   * should result in points that are in the same coordinate system as an\n   * event's `globalX/globalY` data values.\n   *\n   * - Consider caching this for the lifetime of the component, or possibly\n   *   being able to share this cache between any `ScrollMap` view.\n   *\n   * @sideeffects\n   * @private\n   */\n_remeasureMetricsOnActivation:function _remeasureMetricsOnActivation(e){\n/* @edit begin */\nUIManager.measure(\ne.nativeEvent.target,\nthis._handleQueryLayout);\n\n/* @edit end */\n},\n\n_handleQueryLayout:function _handleQueryLayout(l,t,w,h,globalX,globalY){\nthis.state.touchable.positionOnActivate&&\nPosition.release(this.state.touchable.positionOnActivate);\nthis.state.touchable.dimensionsOnActivate&&\nBoundingDimensions.release(this.state.touchable.dimensionsOnActivate);\nthis.state.touchable.positionOnActivate=Position.getPooled(globalX,globalY);\nthis.state.touchable.dimensionsOnActivate=BoundingDimensions.getPooled(w,h);\n},\n\n_handleDelay:function _handleDelay(e){\nthis.touchableDelayTimeout=null;\nthis._receiveSignal(Signals.DELAY,e);\n},\n\n_handleLongDelay:function _handleLongDelay(e){\nthis.longPressDelayTimeout=null;\nvar curState=this.state.touchable.touchState;\nif(curState!==States.RESPONDER_ACTIVE_PRESS_IN&&\ncurState!==States.RESPONDER_ACTIVE_LONG_PRESS_IN){\nconsole.error('Attempted to transition from state `'+curState+'` to `'+\nStates.RESPONDER_ACTIVE_LONG_PRESS_IN+'`, which is not supported. This is '+\n'most likely due to `Touchable.longPressDelayTimeout` not being cancelled.');\n}else{\nthis._receiveSignal(Signals.LONG_PRESS_DETECTED,e);\n}\n},\n\n/**\n   * Receives a state machine signal, performs side effects of the transition\n   * and stores the new state. Validates the transition as well.\n   *\n   * @param {Signals} signal State machine signal.\n   * @throws Error if invalid state transition or unrecognized signal.\n   * @sideeffects\n   */\n_receiveSignal:function _receiveSignal(signal,e){\nvar responderID=this.state.touchable.responderID;\nvar curState=this.state.touchable.touchState;\nvar nextState=Transitions[curState]&&Transitions[curState][signal];\nif(!responderID&&signal===Signals.RESPONDER_RELEASE){\nreturn;\n}\nif(!nextState){\nthrow new Error(\n'Unrecognized signal `'+signal+'` or state `'+curState+\n'` for Touchable responder `'+responderID+'`');\n\n}\nif(nextState===States.ERROR){\nthrow new Error(\n'Touchable cannot transition from `'+curState+'` to `'+signal+\n'` for responder `'+responderID+'`');\n\n}\nif(curState!==nextState){\nthis._performSideEffectsForTransition(curState,nextState,signal,e);\nthis.state.touchable.touchState=nextState;\n}\n},\n\n_cancelLongPressDelayTimeout:function _cancelLongPressDelayTimeout(){\nthis.longPressDelayTimeout&&clearTimeout(this.longPressDelayTimeout);\nthis.longPressDelayTimeout=null;\n},\n\n_isHighlight:function _isHighlight(state){\nreturn state===States.RESPONDER_ACTIVE_PRESS_IN||\nstate===States.RESPONDER_ACTIVE_LONG_PRESS_IN;\n},\n\n_savePressInLocation:function _savePressInLocation(e){\nvar touch=TouchEventUtils.extractSingleTouch(e.nativeEvent);\nvar pageX=touch&&touch.pageX;\nvar pageY=touch&&touch.pageY;\nvar locationX=touch&&touch.locationX;\nvar locationY=touch&&touch.locationY;\nthis.pressInLocation={pageX:pageX,pageY:pageY,locationX:locationX,locationY:locationY};\n},\n\n_getDistanceBetweenPoints:function _getDistanceBetweenPoints(aX,aY,bX,bY){\nvar deltaX=aX-bX;\nvar deltaY=aY-bY;\nreturn Math.sqrt(deltaX*deltaX+deltaY*deltaY);\n},\n\n/**\n   * Will perform a transition between touchable states, and identify any\n   * highlighting or unhighlighting that must be performed for this particular\n   * transition.\n   *\n   * @param {States} curState Current Touchable state.\n   * @param {States} nextState Next Touchable state.\n   * @param {Signal} signal Signal that triggered the transition.\n   * @param {Event} e Native event.\n   * @sideeffects\n   */\n_performSideEffectsForTransition:function _performSideEffectsForTransition(curState,nextState,signal,e){var _this=this;\nvar curIsHighlight=this._isHighlight(curState);\nvar newIsHighlight=this._isHighlight(nextState);\n\nvar isFinalSignal=\nsignal===Signals.RESPONDER_TERMINATED||\nsignal===Signals.RESPONDER_RELEASE;\n\nif(isFinalSignal){\nthis._cancelLongPressDelayTimeout();\n}\n\nif(!IsActive[curState]&&IsActive[nextState]){\nthis._remeasureMetricsOnActivation(e);\n}\n\nif(IsPressingIn[curState]&&signal===Signals.LONG_PRESS_DETECTED){\nthis.touchableHandleLongPress&&this.touchableHandleLongPress(e);\n}\n\nif(newIsHighlight&&!curIsHighlight){\nthis._savePressInLocation(e);\nthis.touchableHandleActivePressIn&&this.touchableHandleActivePressIn(e);\n}else if(!newIsHighlight&&curIsHighlight&&this.touchableHandleActivePressOut){\nif(this.touchableGetPressOutDelayMS&&this.touchableGetPressOutDelayMS()){\nthis.pressOutDelayTimeout=setTimeout(function(){\n_this.touchableHandleActivePressOut(e);\n},this.touchableGetPressOutDelayMS());\n}else{\nthis.touchableHandleActivePressOut(e);\n}\n}\n\nif(IsPressingIn[curState]&&signal===Signals.RESPONDER_RELEASE){\nvar hasLongPressHandler=!!this.props.onLongPress;\nvar pressIsLongButStillCallOnPress=\nIsLongPressingIn[curState]&&(// We *are* long pressing..\n!hasLongPressHandler||// But either has no long handler\n!this.touchableLongPressCancelsPress()// or we're told to ignore it.\n);\n\nvar shouldInvokePress=!IsLongPressingIn[curState]||pressIsLongButStillCallOnPress;\nif(shouldInvokePress&&this.touchableHandlePress){\nthis.touchableHandlePress(e);\n}\n}\n\nthis.touchableDelayTimeout&&clearTimeout(this.touchableDelayTimeout);\nthis.touchableDelayTimeout=null;\n}};\n\n\n\nvar Touchable={\nMixin:TouchableMixin,\nTOUCH_TARGET_DEBUG:false,// Highlights all touchable targets. Toggle with Inspector.\n/**\n   * Renders a debugging overlay to visualize touch target with hitSlop (might not work on Android).\n   */\nrenderDebugView:function renderDebugView(_ref){var color=_ref.color;var hitSlop=_ref.hitSlop;\nif(!Touchable.TOUCH_TARGET_DEBUG){\nreturn null;\n}\nif(process.env.NODE_ENV==='production'){\nthrow Error('Touchable.TOUCH_TARGET_DEBUG should not be enabled in prod!');\n}\nvar debugHitSlopStyle={};\nhitSlop=hitSlop||{top:0,bottom:0,left:0,right:0};\nfor(var key in hitSlop){\ndebugHitSlopStyle[key]=-hitSlop[key];\n}\nvar hexColor='#'+('00000000'+normalizeColor(color).toString(16)).substr(-8);\nreturn(\nReact.createElement(View,{\npointerEvents:'none',\nstyle:_extends({\nposition:'absolute',\nborderColor:hexColor.slice(0,-2)+'55',// More opaque\nborderWidth:1,\nborderStyle:'dashed',\nbackgroundColor:hexColor.slice(0,-2)+'0F'},\ndebugHitSlopStyle)}));\n\n\n\n}};\n\n\nmodule.exports=Touchable;"]},"metadata":{},"sourceType":"script"}